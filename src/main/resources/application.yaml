spring:
  datasource:
    url: jdbc:mysql://127.0.0.1:3306/student
    username: root
    password: 123456
  jpa:
    generate-ddl: false
    show-sql: true
    properties:
      hibernate:
        dialect: org.hibernate.dialect.MySQLDialect
        format_sql: true
        use-new-id-generator-mappings: false
  sql:
    init:
      schema-locations: classpath:init.sql
      mode: always
      continue-on-error: true
#  data:
#    redis:
##      host: 127.0.0.1
##      port: 6380
##      password: 123456
#      lettuce:
#        pool:
#          max-active: 8
#          max-idle: 8
#          max-wait: -1ms
#          min-idle: 0
#      sentinel:
#        master: local-master
#        nodes: 127.0.0.1:26379,127.0.0.1:26380,127.0.0.1:26381
#        password: 123456
#      password: 123456
#      timeout: 50000ms
#  kafka:
#    bootstrap-servers: http://127.0.0.1:29092,http://127.0.0.1:39092
#    producer:
#      retries: 3
#      #acks = 0 如果设置为零，则生产者将不会等待来自服务器的任何确认，该记录将立即添加到套接字缓冲区并视为已发送。在这种情况下，无法保证服务器已收到记录，并且重试配置将不会生效（因为客户端通常不会知道任何故障），为每条记录返回的偏移量始终设置为-1。
#      #acks = 1 这意味着leader会将记录写入其本地日志，但无需等待所有副本服务器的完全确认即可做出回应，在这种情况下，如果leader在确认记录后立即失败，但在将数据复制到所有的副本服务器之前，则记录将会丢失。
#      #acks = all 这意味着leader将等待完整的同步副本集以确认记录，这保证了只要至少一个同步副本服务器仍然存活，记录就不会丢失，这是最强有力的保证，这相当于acks = -1的设置。
#      #可以设置的值为：all, -1, 0,
#      acks: all
#      batch-size: 16384
#      buffer-memory: 33554432
#      key-serializer: org.apache.kafka.common.serialization.StringSerializer
#      value-serializer: org.apache.kafka.common.serialization.StringSerializer
#    consumer:
#      group-id: eshop-cache-group
#      auto-offset-reset: earliest
#      enable-auto-commit: false
#      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
#      value-deserializer: org.apache.kafka.common.serialization.StringDeserializer
#      max-poll-records: 20000
#    listener:
#      concurrency: 3
#      ack-mode: MANUAL
jasypt:
  encryptor:
    # 加密算法
    algorithm: PBEWITHHMACSHA512ANDAES_256
    # 加密使用的盐
    password: jaspyt_password
#server:
#  tomcat:
#    uri-encoding: UTF-8